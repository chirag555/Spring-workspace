package webapp.controller;

import java.util.List;
import org.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.ResponseEntity;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.fasterxml.jackson.annotation.JsonAlias;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import webapp.entity.Logger;
import webapp.entity.Post;
import webapp.services.PostsService;

@RestController
@RequestMapping("/posts")
public class PostsController {

	@Autowired
	private PostsService postService;
	String url = "http://localhost:8090/loggers/";
	RestTemplate restTemplate = new RestTemplate();
	Post tempPost = new Post();
	Logger tempLogger = new Logger();
	HttpHeaders httpHeaders = restTemplate.headForHeaders(url);
	ObjectMapper mapper = new ObjectMapper();
	HttpEntity<String> request = new HttpEntity<String>(url);

	@GetMapping("/")
	public List<Post> getPost() {
		return postService.getPosts();
	}

	@GetMapping("/{id}")
	public Post getPost(@PathVariable int id) {
		return postService.getPosts(id);
	}

	
	  @PostMapping
	 
	public Model addPost(@RequestBody Post post) throws JsonProcessingException {

		String tempResponse = postService.addPost(post);
		Model model = null;
		// restTemplate.postForObject(url, request, Post.class);
		JSONObject json = new JSONObject(tempResponse);
		 //System.out.println(json);
		//return ResponseEntity.accepted().body(tempResponse);
		model.addAttribute("Response",json)
		return model;

		// return ResponseEntity.accepted().body(post);
	}

	//test area start
	
		
	//test area end
	
	@PutMapping
	public ResponseEntity<Post> updatePost(@RequestBody Post post) throws JsonProcessingException {
		postService.updatePost(post);
		// ResponseEntity.accepted().body(post).
		return ResponseEntity.accepted().body(post);

	}

	@DeleteMapping("/{id}")
	public void updatePost(@PathVariable int id) {
		postService.deletePost(id);
	}

}
